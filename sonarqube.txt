Code Quality check tool

#SonarQube ------------------other tools (veracode, coverity, codescence)

SonarQube is a very popular code quality management tool that is used widely for code analysis to identify code smells, possible bugs, and performance enhancements. SonarQube supports many popular programming languages like Java, JavaScript, C#, Python, Kotlin, Scala etc. It also provides test and code coverage.


Benfits:
Improve quality.
Grow developer skills.
Continuous quality management.
Reduce risk(vulnerabilities).
Scale with ease.
Code quality and smell

code smell : A maintainability issue that makes your code confusing and difficult to maintain.

Code vulnerabilities: Code vulnerabilities are software flaws that open opportunities for potential application misuse, exploits, or breaches that result in sensitive information disclosure, data leaks, ransomware attacks, and other cyber security issues.
-----------------

threecompontes 
------>sonarquber server 

----->rules --apply rules on code 

--defult data base embedded H2 database 

------>scanner 
gather rules 
scan the source code  
send the reports to database  




STEUP:

required 4gb ram and 2 cpus
dependency: java11 or 17
req: t2.medium
port: 9000

#Launch an t2.medium instance with allow port 9000 

amazon-linux-extras install java-openjdk11 -y   #if amzon linux 2
sudo dnf install java-11-amazon-corretto  # if amazon linux 2023
cd /opt/ #switch to opt directory
sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.6.50800.zip
sudo unzip sonarqube-8.9.6.50800.zip

# sonarqube has to run with user only 
sudo useradd sonar
sudo chown sonar:sonar sonarqube-8.9.6.50800 -R
sudo chmod 777 sonarqube-8.9.6.50800 -R

passwd sonar (create password)
su - sonar (log in as sonar)

#run this on server manually
sh /opt/sonarqube-8.9.6.50800/bin/linux-x86-64/sonar.sh start
sh /opt/sonarqube-8.9.6.50800/bin/linux-x86-64/sonar.sh status
 
to start ----- sh sonar.sh start or ./sonar.sh start
to check status ----- sh sonar.sh status

#to access 
public-ip:9000
user=admin & password=admin

note : after login we need to give our custom password 
---------------------------------------------------------------------



sonarQube on Docker 

docker run -d --name sonar -p 9000:9000 sonarqube:lts-community
--------------------------------------------------------------------




###### ----------configure with jenkins-------------------------#####

prerequistes :

create token in sonarqube ---->after login go to adminstration---security--user--create token




step-1

--Required plugins--

sonarqube scanner for jenkins

qulaity gates if required (optional)

step-2 

go to credential and select text mode paste you token and give name 

go to system configurations paste url and select key and give name ex: 'SonarQube'  (note: this name only we have to call like withSonarQubeEnv('SonarQube'))


step-3

create jenkins job and paste below script mavne and sonar 


passing with envvironment varaibles without hards coded values (sonar url and token)

pipeline {
    agent any

    stages {
        stage('scm') {
            steps {
                git branch: 'main', url: 'https://github.com/nareshdevopscloud/project-1-maven-jenkins-CICD-docker-eks-.git'
            }
        }
        stage('clean') {
            steps {
                sh 'mvn clean'
                           
            }
        }
        stage('code quality') {
            steps {
                withSonarQubeEnv('SonarQube'){    
                sh 'mvn install sonar:sonar'
               
            }
        }
        }
    }
}



